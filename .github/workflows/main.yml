name: CI

on:
  push:
    tags:
      - v*
env:
  FORCE_COLOR: 1
permissions: write-all
jobs:
  test:
    runs-on: ubuntu-latest
    name: Test components
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
        env:
          DATABASE_NAME: ${{vars.DATABASE_NAME}}
          AUTH_KEY_URL: ${{vars.AUTH_KEY_URL}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          REPO_TOKEN: ${{secrets.REPO_TOKEN}}
          WEBHOOK_TOKEN: ${{secrets.WEBHOOK_TOKEN}}
  build:
    runs-on: ubuntu-latest
    name: Install dependencies and build
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
      - name: Checkout files from repo
        uses: actions/checkout@v2
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Set environment variables
        env:
          DATABASE_NAME: ${{vars.DATABASE_NAME}}
          AUTH_KEY_URL: ${{vars.AUTH_KEY_URL}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          REPO_TOKEN: ${{secrets.REPO_TOKEN}}
          WEBHOOK_TOKEN: ${{secrets.WEBHOOK_TOKEN}}
        run: |
          flyctl secrets set \
            DATABASE_URL=${DATABASE_URL} \
            DATABASE_NAME=${DATABASE_NAME} \
            REPO_TOKEN=${REPO_TOKEN} \
            WEBHOOK_TOKEN=${WEBHOOK_TOKEN} \
            AUTH_KEY_URL=${AUTH_KEY_URL}
      - name: Deploy
        run: flyctl deploy --remote-only
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Publish release
        uses: elgohr/Github-Release-Action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "v${{ github.ref }}"
